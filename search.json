[{"path":"rcannood.github.io/SCORPIUS/articles/anndata.html","id":"reduce-dimensionality-of-the-dataset","dir":"Articles","previous_headings":"","what":"Reduce dimensionality of the dataset","title":"Running SCORPIUS on an AnnData object","text":"SCORPIUS uses Torgerson multi-dimensional scaling reduce dataset three dimensions. technique attempts place cells space distance two points space approximates original distance two cells well possible. distance two samples defined correlation distance, namely 1 - (cor(x, y)+1)/2. reduced space constructed follows: new space matrix can visualised without colouring different cell types.","code":"space <- reduce_dimensionality(adata$X, dist = \"spearman\", ndim = 3) draw_trajectory_plot(   space,   progression_group = group_name,    contour = TRUE )"},{"path":"rcannood.github.io/SCORPIUS/articles/anndata.html","id":"inferring-a-trajectory-through-the-cells","dir":"Articles","previous_headings":"","what":"Inferring a trajectory through the cells","title":"Running SCORPIUS on an AnnData object","text":"main goal SCORPIUS infer trajectory cells, orden cells according inferred timeline. SCORPIUS infers trajectory several intermediate steps, executed follows: result list containing final trajectory path inferred timeline sample time. trajectory can visualised respect samples passing draw_trajectory_plot:","code":"traj <- infer_trajectory(space) draw_trajectory_plot(   space,    progression_group = group_name,   path = traj$path,   contour = TRUE )"},{"path":"rcannood.github.io/SCORPIUS/articles/anndata.html","id":"finding-candidate-marker-genes","dir":"Articles","previous_headings":"","what":"Finding candidate marker genes","title":"Running SCORPIUS on an AnnData object","text":"search genes whose expression seems function trajectory timeline inferred, genes might good candidate marker genes dendritic cell maturation. visualise expression selected genes, use draw_trajectory_heatmap function.  Finally, genes can also grouped modules follows:","code":"gimp <- gene_importances(adata$X, traj$time, num_permutations = 0, num_threads = 8) gene_sel <- gimp[1:50,] expr_sel <- adata$X[,gene_sel$gene] draw_trajectory_heatmap(expr_sel, traj$time, group_name) modules <- extract_modules(scale_quantile(expr_sel), traj$time, verbose = FALSE) draw_trajectory_heatmap(expr_sel, traj$time, group_name, modules)"},{"path":"rcannood.github.io/SCORPIUS/articles/anndata.html","id":"store-outputs-in-anndata","dir":"Articles","previous_headings":"","what":"Store outputs in AnnData","title":"Running SCORPIUS on an AnnData object","text":"","code":"adata$obsm[[\"X_mds\"]] <- space adata$uns[[\"trajectory_path\"]] <- traj$path adata$obs[[\"trajectory_pseudotime\"]] <- traj$time adata$var[[\"trajectory_importance\"]] <- gimp[match(adata$var_names, gimp$gene), ]$importance  adata ## AnnData object with n_obs × n_vars = 245 × 2000 ##     obs: 'group_name', 'trajectory_pseudotime' ##     var: 'trajectory_importance' ##     uns: 'trajectory_path' ##     obsm: 'X_mds'"},{"path":"rcannood.github.io/SCORPIUS/articles/ginhoux.html","id":"reduce-dimensionality-of-the-dataset","dir":"Articles","previous_headings":"","what":"Reduce dimensionality of the dataset","title":"Investigating dendritic cell maturation in dendritic cell progenitors","text":"SCORPIUS uses Torgerson multi-dimensional scaling reduce dataset three dimensions. technique attempts place cells space distance two points space approximates original distance two cells well possible. distance two samples defined correlation distance, namely 1 - (cor(x, y)+1)/2. reduced space constructed follows: new space 245--3 matrix, can visualised without colouring different cell types.","code":"expression <- ginhoux$expression group_name <- ginhoux$sample_info$group_name space <- reduce_dimensionality(expression, \"spearman\", ndim = 3) draw_trajectory_plot(space, progression_group = group_name, contour = TRUE)"},{"path":"rcannood.github.io/SCORPIUS/articles/ginhoux.html","id":"inferring-a-trajectory-through-the-cells","dir":"Articles","previous_headings":"","what":"Inferring a trajectory through the cells","title":"Investigating dendritic cell maturation in dendritic cell progenitors","text":"main goal SCORPIUS infer trajectory cells, orden cells according inferred timeline. SCORPIUS infers trajectory several intermediate steps, executed follows: result list containing final trajectory path inferred timeline sample time. trajectory can visualised respect samples passing draw_trajectory_plot:","code":"traj <- infer_trajectory(space) draw_trajectory_plot(   space,    progression_group = group_name,   path = traj$path,   contour = TRUE )"},{"path":"rcannood.github.io/SCORPIUS/articles/ginhoux.html","id":"finding-candidate-marker-genes","dir":"Articles","previous_headings":"","what":"Finding candidate marker genes","title":"Investigating dendritic cell maturation in dendritic cell progenitors","text":"search genes whose expression seems function trajectory timeline inferred, genes might good candidate marker genes dendritic cell maturation. visualise expression selected genes, use draw_trajectory_heatmap function.  Finally, genes can also grouped modules follows:","code":"gimp <- gene_importances(expression, traj$time, num_permutations = 0, num_threads = 8) gene_sel <- gimp[1:50,] expr_sel <- expression[,gene_sel$gene] draw_trajectory_heatmap(expr_sel, traj$time, group_name) modules <- extract_modules(scale_quantile(expr_sel), traj$time, verbose = FALSE) draw_trajectory_heatmap(expr_sel, traj$time, group_name, modules)"},{"path":"rcannood.github.io/SCORPIUS/articles/seurat.html","id":"normalise-with-seurat","dir":"Articles","previous_headings":"","what":"Normalise with Seurat","title":"Running SCORPIUS on a Seurat object","text":"Seurat used normalise dataset. Since dimensionality reduction method scale-invariant, scaling step Seurat required. Fetch expression data Seurat object follows. Also fetch metadata Seurat object. Change group_name whatever column srt@meta.data interested .","code":"srt <- NormalizeData(srt) expression <- t(srt@assays$RNA@data) group_name <- srt@meta.data$group_name"},{"path":"rcannood.github.io/SCORPIUS/articles/seurat.html","id":"reduce-dimensionality-of-the-dataset","dir":"Articles","previous_headings":"","what":"Reduce dimensionality of the dataset","title":"Running SCORPIUS on a Seurat object","text":"SCORPIUS uses Torgerson multi-dimensional scaling reduce dataset three dimensions. technique attempts place cells space distance two points space approximates original distance two cells well possible. distance two samples defined correlation distance, namely 1 - (cor(x, y)+1)/2. reduced space constructed follows: new space matrix can visualised without colouring different cell types.","code":"space <- reduce_dimensionality(expression, dist = \"spearman\", ndim = 3) draw_trajectory_plot(space, progression_group = group_name, contour = TRUE)"},{"path":"rcannood.github.io/SCORPIUS/articles/seurat.html","id":"inferring-a-trajectory-through-the-cells","dir":"Articles","previous_headings":"","what":"Inferring a trajectory through the cells","title":"Running SCORPIUS on a Seurat object","text":"main goal SCORPIUS infer trajectory cells, orden cells according inferred timeline. SCORPIUS infers trajectory several intermediate steps, executed follows: result list containing final trajectory path inferred timeline sample time. trajectory can visualised respect samples passing draw_trajectory_plot:","code":"traj <- infer_trajectory(space) draw_trajectory_plot(   space,    progression_group = group_name,   path = traj$path,   contour = TRUE )"},{"path":"rcannood.github.io/SCORPIUS/articles/seurat.html","id":"finding-candidate-marker-genes","dir":"Articles","previous_headings":"","what":"Finding candidate marker genes","title":"Running SCORPIUS on a Seurat object","text":"search genes whose expression seems function trajectory timeline inferred, genes might good candidate marker genes dendritic cell maturation. Note: work sufficiently small expression matrices!s visualise expression selected genes, use draw_trajectory_heatmap function.  Finally, genes can also grouped modules follows:","code":"expression <- as.matrix(expression) gimp <- gene_importances(expression, traj$time, num_permutations = 0, num_threads = 8) gene_sel <- gimp[1:50,] expr_sel <- expression[,gene_sel$gene] draw_trajectory_heatmap(expr_sel, traj$time, group_name) modules <- extract_modules(scale_quantile(expr_sel), traj$time, verbose = FALSE) draw_trajectory_heatmap(expr_sel, traj$time, group_name, modules)"},{"path":"rcannood.github.io/SCORPIUS/articles/simulated-data.html","id":"simulate-expression-data","dir":"Articles","previous_headings":"","what":"Simulate expression data","title":"Trajectory inference from simulated data","text":"Expression values 384 cells 500 genes generated follows. resulting dataset list containing matrix named expression data frame named sample_info. expression 384--500 matrix containing expression values cells genes. sample_info data frame metadata cells, containing group cell belongs . order infer trajectory data, SCORPIUS first reduces dimensionality dataset.","code":"library(SCORPIUS) dataset <- generate_dataset(num_genes = 500, num_samples = 384, num_groups = 4) dataset$expression[1:6, 1:6] ##             Gene1     Gene2     Gene3    Gene4     Gene5     Gene6 ## Sample1  4.229293  0.000000  6.752726 2.911327  9.116873  7.968772 ## Sample2 12.063623  6.101313  0.000000 8.023840  6.612786  0.000000 ## Sample3  7.973086 12.969934 10.412038 5.564873 10.258806  0.000000 ## Sample4  0.000000 10.665796  7.329762 4.635637  9.743435  5.462945 ## Sample5  8.467850 12.182375  5.609669 0.000000  7.102293  7.985970 ## Sample6  9.269898  9.630904 10.455783 0.000000  8.349845 13.157807 head(dataset$sample_info) ##         group_name ## Sample1    Group 1 ## Sample2    Group 1 ## Sample3    Group 1 ## Sample4    Group 1 ## Sample5    Group 1 ## Sample6    Group 1"},{"path":"rcannood.github.io/SCORPIUS/articles/simulated-data.html","id":"reduce-dimensionality-of-the-dataset","dir":"Articles","previous_headings":"","what":"Reduce dimensionality of the dataset","title":"Trajectory inference from simulated data","text":"SCORPIUS uses Torgerson multi-dimensional scaling reduce dataset three dimensions. technique attempts place cells space distance two points space approximates original distance two cells well possible. distance two samples defined correlation distance, namely 1 - (cor(x, y)+1)/2. reduced space constructed follows: new space 384--3 matrix, can visualised without colouring different cell types.","code":"expression <- dataset$expression group_name <- dataset$sample_info$group_name space <- reduce_dimensionality(expression, \"spearman\", ndim = 3) draw_trajectory_plot(space, progression_group = group_name, contour = TRUE)"},{"path":"rcannood.github.io/SCORPIUS/articles/simulated-data.html","id":"inferring-a-trajectory-through-the-cells","dir":"Articles","previous_headings":"","what":"Inferring a trajectory through the cells","title":"Trajectory inference from simulated data","text":"main goal SCORPIUS infer trajectory cells, orden cells according inferred timeline. SCORPIUS infers trajectory several intermediate steps, executed follows: result list containing final trajectory path inferred timeline sample time. trajectory can visualised respect samples passing draw_trajectory_plot:","code":"traj <- infer_trajectory(space) draw_trajectory_plot(   space,    progression_group = group_name,   path = traj$path,   contour = TRUE )"},{"path":"rcannood.github.io/SCORPIUS/articles/simulated-data.html","id":"finding-candidate-marker-genes","dir":"Articles","previous_headings":"","what":"Finding candidate marker genes","title":"Trajectory inference from simulated data","text":"search genes whose expression seems function trajectory timeline inferred, genes might good candidate marker genes dynamic process investigated. visualise expression selected genes, use draw_trajectory_heatmap function.  Finally, genes can also grouped modules follows:","code":"gimp <- gene_importances(expression, traj$time, num_permutations = 0, num_threads = 8) gene_sel <- gimp[1:50,] expr_sel <- expression[,gene_sel$gene] draw_trajectory_heatmap(expr_sel, traj$time, group_name) modules <- extract_modules(scale_quantile(expr_sel), traj$time, verbose = FALSE) draw_trajectory_heatmap(expr_sel, traj$time, group_name, modules)"},{"path":"rcannood.github.io/SCORPIUS/articles/singlecellexperiment.html","id":"reduce-dimensionality-of-the-dataset","dir":"Articles","previous_headings":"","what":"Reduce dimensionality of the dataset","title":"Running SCORPIUS on a SingleCellExperiment object","text":"new space matrix can visualised without colouring different cell types.","code":"space <- reduce_dimensionality(t(assay(sce, \"counts\")), dist = \"spearman\", ndim = 3) draw_trajectory_plot(   space,   progression_group = group_name,    contour = TRUE )"},{"path":"rcannood.github.io/SCORPIUS/articles/singlecellexperiment.html","id":"inferring-a-trajectory-through-the-cells","dir":"Articles","previous_headings":"","what":"Inferring a trajectory through the cells","title":"Running SCORPIUS on a SingleCellExperiment object","text":"result list containing final trajectory path inferred timeline sample time.","code":"traj <- infer_trajectory(space) draw_trajectory_plot(   space,    progression_group = group_name,   path = traj$path,   contour = TRUE )"},{"path":"rcannood.github.io/SCORPIUS/articles/singlecellexperiment.html","id":"finding-candidate-marker-genes","dir":"Articles","previous_headings":"","what":"Finding candidate marker genes","title":"Running SCORPIUS on a SingleCellExperiment object","text":"visualise expression selected genes, use draw_trajectory_heatmap function.  Finally, genes can also grouped modules follows:","code":"gimp <- gene_importances(   t(assay(sce, \"counts\")),   traj$time,   num_permutations = 0,   num_threads = 8 ) gene_sel <- gimp[1:50,] expr_sel <- t(assay(sce, \"counts\"))[,gene_sel$gene] draw_trajectory_heatmap(expr_sel, traj$time, group_name) modules <- extract_modules(scale_quantile(expr_sel), traj$time, verbose = FALSE) draw_trajectory_heatmap(expr_sel, traj$time, group_name, modules)"},{"path":"rcannood.github.io/SCORPIUS/articles/singlecellexperiment.html","id":"store-outputs-in-singlecellexperiment","dir":"Articles","previous_headings":"","what":"Store outputs in SingleCellExperiment","title":"Running SCORPIUS on a SingleCellExperiment object","text":"","code":"reducedDims(sce) <- SimpleList(MDS = space) colData(sce)$trajectory_path <- traj$path colData(sce)$trajectory_pseudotime <- traj$time rowData(sce)$trajectory_importance <- gimp[match(rownames(sce), gimp$gene),]$importance  sce ## class: SingleCellExperiment  ## dim: 2000 245  ## metadata(0): ## assays(1): counts ## rownames(2000): Mpo DQ688647 ... Clcf1 Pip5k1c ## rowData names(1): trajectory_importance ## colnames(245): SRR1558744 SRR1558745 ... SRR1558993 SRR1558994 ## colData names(3): group_name trajectory_path trajectory_pseudotime ## reducedDimNames(1): MDS ## mainExpName: NULL ## altExpNames(0):"},{"path":"rcannood.github.io/SCORPIUS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robrecht Cannoodt. Author, maintainer.            rcannood Wouter Saelens. Contributor.            zouter","code":""},{"path":"rcannood.github.io/SCORPIUS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cannoodt R. et al., SCORPIUS improves trajectory inference identifies novel modules dendritic cell development, bioRxiv (Oct., 2016). DOI: 10.1101/079509.","code":"@Article{,   author = {Robrecht Cannoodt and Wouter Saelens and Dorine Sichien and Simon Tavernier and Sophie Janssens and Martin Guilliams and Bart N Lambrecht and Katleen {De Preter} and Yvan Saeys},   title = {SCORPIUS improves trajectory inference and identifies novel modules in dendritic cell development},   journal = {bioRxiv},   year = {2016},   month = {October},   doi = {10.1101/079509},   url = {https://www.biorxiv.org/content/10.1101/079509v2}, }"},{"path":"rcannood.github.io/SCORPIUS/index.html","id":"scorpius","dir":"","previous_headings":"","what":"Inferring Developmental Chronologies from Single-Cell RNA Sequencing Data","title":"Inferring Developmental Chronologies from Single-Cell RNA Sequencing Data","text":"SCORPIUS unsupervised approach inferring linear developmental chronologies single-cell RNA sequencing data. comparison similar approaches, three main advantages: accurately reconstructs linear dynamic processes. performance evaluated using quantitative evaluation pipeline ten single-cell RNA sequencing datasets. automatically identifies marker genes, speeding knowledge discovery. fully unsupervised. Prior knowledge relevant marker genes cellular states individual cells required. News: See news(package = \"SCORPIUS\") full list changes package. preprint bioRxiv (Cannoodt et al. 2016). Check review Trajectory Inference methods (Saelens et al. 2019).","code":""},{"path":"rcannood.github.io/SCORPIUS/index.html","id":"installing-scorpius","dir":"","previous_headings":"","what":"Installing SCORPIUS","title":"Inferring Developmental Chronologies from Single-Cell RNA Sequencing Data","text":"can install: latest released version CRAN latest development version GitHub encounter bug, please file minimal reproducible example issues page.","code":"install.packages(\"SCORPIUS\") devtools::install_github(\"rcannood/SCORPIUS\", build_vignettes = TRUE)"},{"path":"rcannood.github.io/SCORPIUS/index.html","id":"learning-scorpius","dir":"","previous_headings":"","what":"Learning SCORPIUS","title":"Inferring Developmental Chronologies from Single-Cell RNA Sequencing Data","text":"get started, read introductory example , read one vignettes containing elaborate examples: Running SCORPIUS AnnData object:vignette(\"anndata\", package=\"SCORPIUS\") Investigating dendritic cell maturation dendritic cell progenitors:vignette(\"ginhoux\", package=\"SCORPIUS\") Running SCORPIUS Seurat object:vignette(\"seurat\", package=\"SCORPIUS\") Trajectory inference simulated data:vignette(\"simulated-data\", package=\"SCORPIUS\")","code":""},{"path":"rcannood.github.io/SCORPIUS/index.html","id":"introductory-example","dir":"","previous_headings":"","what":"Introductory example","title":"Inferring Developmental Chronologies from Single-Cell RNA Sequencing Data","text":"section describes main workflow SCORPIUS without going depth R code. detailed explanation, see vignettes listed . start using SCORPIUS, simply write: ginhoux dataset (Schlitzer et al. 2015) contains 248 dendritic cell progenitors one three cellular cellular states: MDP, CDP PreDC. Note reduced version dataset, packaging reasons. See ?ginhoux info. following code, SCORPIUS reduces dimensionality dataset provides visual overview dataset. plot, cells similar terms expression values placed closer together cells dissimilar expression values.  infer visualise trajectory cells, run:  identify candidate marker genes, run: select important genes scale expression, run: visualise expression selected genes, use draw_trajectory_heatmap function.  Finally, genes can also grouped modules follows:","code":"library(SCORPIUS) data(ginhoux) expression <- ginhoux$expression group_name <- ginhoux$sample_info$group_name space <- reduce_dimensionality(expression, \"spearman\") draw_trajectory_plot(space, group_name, contour = TRUE) traj <- infer_trajectory(space) draw_trajectory_plot(space, group_name, traj$path, contour = TRUE) # warning: setting num_permutations to 10 requires a long time (~30min) to run! # set it to 0 and define a manual cutoff for the genes (e.g. top 200) for a much shorter execution time. gimp <- gene_importances(   expression,    traj$time,    num_permutations = 10,    num_threads = 8,    ntree = 10000,   ntree_perm = 1000 ) gimp$qvalue <- p.adjust(gimp$pvalue, \"BH\", length(gimp$pvalue)) gene_sel <- gimp$gene[gimp$qvalue < .05] expr_sel <- scale_quantile(expression[,gene_sel]) draw_trajectory_heatmap(expr_sel, traj$time, group_name) modules <- extract_modules(scale_quantile(expr_sel), traj$time, verbose = F) draw_trajectory_heatmap(expr_sel, traj$time, group_name, modules)"},{"path":[]},{"path":"rcannood.github.io/SCORPIUS/reference/SCORPIUS-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SCORPIUS: Trajectory inference from single-cell RNA sequencing data. — SCORPIUS-package","title":"SCORPIUS: Trajectory inference from single-cell RNA sequencing data. — SCORPIUS-package","text":"SCORPIUS orders single cells regard implicit timeline, cellular development progression time.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/SCORPIUS-package.html","id":"dimensionality-reduction-functions","dir":"Reference","previous_headings":"","what":"Dimensionality Reduction functions","title":"SCORPIUS: Trajectory inference from single-cell RNA sequencing data. — SCORPIUS-package","text":"reduce_dimensionality","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/SCORPIUS-package.html","id":"trajectory-inference-functions","dir":"Reference","previous_headings":"","what":"Trajectory Inference functions","title":"SCORPIUS: Trajectory inference from single-cell RNA sequencing data. — SCORPIUS-package","text":"infer_trajectory, infer_initial_trajectory, reverse_trajectory, gene_importances, extract_modules","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/SCORPIUS-package.html","id":"visualisation-functions","dir":"Reference","previous_headings":"","what":"Visualisation functions","title":"SCORPIUS: Trajectory inference from single-cell RNA sequencing data. — SCORPIUS-package","text":"draw_trajectory_plot, draw_trajectory_heatmap","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/SCORPIUS-package.html","id":"datasets","dir":"Reference","previous_headings":"","what":"Datasets","title":"SCORPIUS: Trajectory inference from single-cell RNA sequencing data. — SCORPIUS-package","text":"generate_dataset, ginhoux","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/SCORPIUS-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SCORPIUS: Trajectory inference from single-cell RNA sequencing data. — SCORPIUS-package","text":"Cannoodt R. et al., SCORPIUS improves trajectory inference identifies novel modules dendritic cell development, bioRxiv (Oct., 2016). doi:10.1101/079509  (PDF).","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/SCORPIUS-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SCORPIUS: Trajectory inference from single-cell RNA sequencing data. — SCORPIUS-package","text":"","code":"## Load dataset from Schlitzer et al., 2015 data(\"ginhoux\")  ## Reduce dimensionality and infer trajectory with SCORPIUS space <- reduce_dimensionality(ginhoux$expression, \"spearman\") traj <- infer_trajectory(space)  ## Visualise draw_trajectory_plot(   space,   path = traj$path,   progression_group = ginhoux$sample_info$group_name )"},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw time-series heatmap — draw_trajectory_heatmap","title":"Draw time-series heatmap — draw_trajectory_heatmap","text":"draw_trajectory_heatmap draws heatmap samples ranked according position inferred trajectory. addition, progression groups feature modules can passed along enhance visualisation.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw time-series heatmap — draw_trajectory_heatmap","text":"","code":"draw_trajectory_heatmap(   x,   time,   progression_group = NULL,   modules = NULL,   show_labels_row = FALSE,   show_labels_col = FALSE,   scale_features = TRUE,   progression_group_palette = NULL,   ... )"},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw time-series heatmap — draw_trajectory_heatmap","text":"x numeric matrix data frame one row per sample one column per feature. time numeric vector containing inferred time points sample along trajectory. progression_group NULL vector (factor) containing groupings samples (default NULL). modules NULL data frame returned extract_modules. show_labels_row TRUE labels rows plotted (default FALSE). show_labels_col TRUE labels cols plotted (default FALSE). scale_features TRUE values feature scaled (default TRUE). progression_group_palette named vector palette progression group. ... Optional arguments pheatmap","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw time-series heatmap — draw_trajectory_heatmap","text":"output pheatmap function.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw time-series heatmap — draw_trajectory_heatmap","text":"","code":"if (FALSE) { ## Generate a dataset dataset <- generate_dataset(num_genes=500, num_samples=300, num_groups=4) expression <- dataset$expression space <- reduce_dimensionality(expression, ndim=2) groups <- dataset$sample_info$group_name traj <- infer_trajectory(space) time <- traj$time  gimp <- gene_importances(expression, traj$time, num_permutations = 0, ntree = 10000) gene_sel <- gimp[1:50,] expr_sel <- expression[,gene_sel$gene]  ## Draw a time series heatmap draw_trajectory_heatmap(expr_sel, time)  ## Also show the progression groupings draw_trajectory_heatmap(expr_sel, time, progression_group=groups)  ## Use a different palette draw_trajectory_heatmap(   expr_sel, time, progression_group=groups,   progression_group_palette = setNames(RColorBrewer::brewer.pal(4, \"Set2\"), paste0(\"Group \", 1:4)) )  ## Group the genes into modules and visualise the modules in a heatmap modules <- extract_modules(scale_quantile(expr_sel)) draw_trajectory_heatmap(expr_sel, time, progression_group=groups, modules=modules) }"},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise SCORPIUS — draw_trajectory_plot","title":"Visualise SCORPIUS — draw_trajectory_plot","text":"draw_trajectory_plot used plot samples performing dimensionality reduction. Additional arguments can provided colour samples, plot trajectory inferred SCORPIUS, draw contour around samples.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise SCORPIUS — draw_trajectory_plot","text":"","code":"draw_trajectory_plot(   space,   progression_group = NULL,   path = NULL,   contour = FALSE,   progression_group_palette = NULL,   point_size = 2,   point_alpha = 1,   path_size = 0.5,   path_alpha = 1,   contour_alpha = 0.2 )"},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise SCORPIUS — draw_trajectory_plot","text":"space numeric matrix data frame containing coordinates samples. progression_group NULL vector (factor) containing groupings samples (default NULL). path numeric matrix data frame containing coordinates inferred path. contour TRUE contours drawn around samples. progression_group_palette named vector palette progression group. point_size size points. point_alpha alpha points. path_size size path (). path_alpha alpha path (). contour_alpha alpha contour ().","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise SCORPIUS — draw_trajectory_plot","text":"ggplot2 plot.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/draw_trajectory_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise SCORPIUS — draw_trajectory_plot","text":"","code":"## Generate a synthetic dataset dataset <- generate_dataset(num_genes = 500, num_samples = 300, num_groups = 4) space <- reduce_dimensionality(dataset$expression, ndim = 2) groups <- dataset$sample_info$group_name  ## Simply plot the samples draw_trajectory_plot(space)   ## Colour each sample according to its group draw_trajectory_plot(space, progression_group = groups)   ## Add contours to the plot draw_trajectory_plot(space, progression_group = groups, contour = TRUE)   ## Plot contours without colours draw_trajectory_plot(space, contour = TRUE)   ## Infer a trajectory and plot it traj <- infer_trajectory(space) draw_trajectory_plot(space, progression_group = groups, path = traj$path)  draw_trajectory_plot(space, progression_group = groups, path = traj$path, contour = TRUE)   ## Visualise gene expression draw_trajectory_plot(space, progression_group = dataset$expression[,1])"},{"path":"rcannood.github.io/SCORPIUS/reference/extract_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract modules of features — extract_modules","title":"Extract modules of features — extract_modules","text":"extract_modules uses adaptive branch pruning extract modules features, typically done smoothed expression returned gene_importances.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/extract_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract modules of features — extract_modules","text":"","code":"extract_modules(   x,   time = NULL,   suppress_warnings = FALSE,   verbose = FALSE,   ... )"},{"path":"rcannood.github.io/SCORPIUS/reference/extract_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract modules of features — extract_modules","text":"x numeric matrix data frame M rows (one per sample) P columns (one per feature). time (Optional) Order modules according pseudotime suppress_warnings Whether suppress warnings P > 1000 verbose Whether Mclust print output ... Extra parameters passed Mclust","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/extract_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract modules of features — extract_modules","text":"data frame containing meta-data features x, namely order visualise features module belong .","code":""},{"path":[]},{"path":"rcannood.github.io/SCORPIUS/reference/extract_modules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract modules of features — extract_modules","text":"","code":"## Generate a dataset and visualise dataset <- generate_dataset(num_genes=300, num_samples=200, num_groups=4) expression <- dataset$expression group_name <- dataset$sample_info$group_name space <- reduce_dimensionality(expression, ndim=2) traj <- infer_trajectory(space) time <- traj$time draw_trajectory_plot(space, path=traj$path, group_name)   ## Select most important genes (set ntree to at least 10000!) gimp <- gene_importances(expression, traj$time, num_permutations = 0, ntree = 1000) gene_sel <- gimp[1:50,] expr_sel <- expression[,gene_sel$gene]  ## Group the genes into modules and visualise the modules in a heatmap modules <- extract_modules(scale_quantile(expr_sel)) draw_trajectory_heatmap(expr_sel, time, group_name, modules)"},{"path":"rcannood.github.io/SCORPIUS/reference/gene_importances.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the importance of a feature — gene_importances","title":"Calculate the importance of a feature — gene_importances","text":"Calculates feature importance column x trying predict time ordering.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/gene_importances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the importance of a feature — gene_importances","text":"","code":"gene_importances(   x,   time,   num_permutations = 0,   ntree = 10000,   ntree_perm = ntree/10,   mtry = ncol(x) * 0.01,   num_threads = 1,   ... )"},{"path":"rcannood.github.io/SCORPIUS/reference/gene_importances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the importance of a feature — gene_importances","text":"x numeric matrix data frame M rows (one per sample) P columns (one per feature). time numeric vector containing inferred time points sample along trajectory returned infer_trajectory. num_permutations number permutations test calculating p-values (default: 0). ntree number trees grow (default: 10000). ntree_perm number trees grow permutations (default: ntree / 10). mtry number variables randomly samples split (default: 1% features). num_threads Number threads. Default 1. ... Extra parameters passed ranger.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/gene_importances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the importance of a feature — gene_importances","text":"data frame containing importance feature given time line","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/gene_importances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the importance of a feature — gene_importances","text":"","code":"dataset <- generate_dataset(num_genes=500, num_samples=300, num_groups=4) expression <- dataset$expression group_name <- dataset$sample_info$group_name space <- reduce_dimensionality(expression, ndim=2) traj <- infer_trajectory(space) # set ntree to at least 1000! gene_importances(expression, traj$time, num_permutations = 0, ntree = 1000) #> # A tibble: 500 × 3 #>    gene    importance pvalue #>    <chr>        <dbl> <lgl>  #>  1 Gene352      0.198 NA     #>  2 Gene23       0.162 NA     #>  3 Gene213      0.157 NA     #>  4 Gene428      0.146 NA     #>  5 Gene306      0.143 NA     #>  6 Gene229      0.141 NA     #>  7 Gene480      0.138 NA     #>  8 Gene238      0.136 NA     #>  9 Gene105      0.132 NA     #> 10 Gene27       0.131 NA     #> # ℹ 490 more rows"},{"path":"rcannood.github.io/SCORPIUS/reference/generate_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a synthetic dataset — generate_dataset","title":"Generate a synthetic dataset — generate_dataset","text":"generate_dataset generates synthetic dataset can used visualisation purposes.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/generate_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a synthetic dataset — generate_dataset","text":"","code":"generate_dataset(   num_samples = 400,   num_genes = 500,   num_groups = 4 )"},{"path":"rcannood.github.io/SCORPIUS/reference/generate_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a synthetic dataset — generate_dataset","text":"num_samples number samples dataset contain. num_genes number genes dataset contain. num_groups number groups samples split .","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/generate_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a synthetic dataset — generate_dataset","text":"list containing expression data meta data samples.","code":""},{"path":[]},{"path":"rcannood.github.io/SCORPIUS/reference/generate_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a synthetic dataset — generate_dataset","text":"","code":"## Generate a dataset dataset <- generate_dataset(num_genes = 500, num_samples = 1000, num_groups = 4)  ## Reduce dimensionality and infer trajectory with SCORPIUS space <- reduce_dimensionality(dataset$expression, ndim = 2) traj <- infer_trajectory(space)  ## Visualise draw_trajectory_plot(space, path=traj$path, progression_group=dataset$sample_info$group_name)"},{"path":"rcannood.github.io/SCORPIUS/reference/ginhoux.html","id":null,"dir":"Reference","previous_headings":"","what":"scRNA-seq data of dendritic cell progenitors. — ginhoux","title":"scRNA-seq data of dendritic cell progenitors. — ginhoux","text":"dataset contains expression values top 2000 variable genes 248 dendritic cell progenitors. cell one three maturation stages: MDP, CDP PreDC. levels factor sample.info ordered according maturation process. number genes reduced specifically reducing package size SCORPIUS. Use following code download original data:","code":"download.file(\"https://github.com/rcannood/SCORPIUS/raw/master/data-raw/ginhoux_orig.rds\", destfile = \"local.rds\") ginhoux <- readRDS(\"local.rds\") # do something with ginhoux"},{"path":"rcannood.github.io/SCORPIUS/reference/ginhoux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scRNA-seq data of dendritic cell progenitors. — ginhoux","text":"","code":"ginhoux"},{"path":"rcannood.github.io/SCORPIUS/reference/ginhoux.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"scRNA-seq data of dendritic cell progenitors. — ginhoux","text":"list containing two data frames, expression (248x2000) sample_info (248x1).","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/ginhoux.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"scRNA-seq data of dendritic cell progenitors. — ginhoux","text":"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE60783","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/ginhoux.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"scRNA-seq data of dendritic cell progenitors. — ginhoux","text":"Schlitzer , Sivakamasundari V, Chen J, Sumatoh HR et al. Identification cDC1- cDC2-committed DC progenitors reveals early lineage priming common DC progenitor stage bone marrow. Nat Immunol 2015 Jul;16(7):718-28. PMID: 26054720","code":""},{"path":[]},{"path":"rcannood.github.io/SCORPIUS/reference/infer_initial_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer an initial trajectory through space — infer_initial_trajectory","title":"Infer an initial trajectory through space — infer_initial_trajectory","text":"infer_initial_trajectory infers initial trajectory infer_trajectory clustering points calculating shortest path cluster centers. shortest path takes account euclidean distance cluster centers, density two points.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/infer_initial_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer an initial trajectory through space — infer_initial_trajectory","text":"","code":"infer_initial_trajectory(space, k)"},{"path":"rcannood.github.io/SCORPIUS/reference/infer_initial_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer an initial trajectory through space — infer_initial_trajectory","text":"space numeric matrix data frame containing coordinates samples. k number clusters","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/infer_initial_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer an initial trajectory through space — infer_initial_trajectory","text":"initial trajectory obtained method","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/infer_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer linear trajectory through space — infer_trajectory","title":"Infer linear trajectory through space — infer_trajectory","text":"infer_trajectory infers trajectory samples given space four-step process: Perform k-means clustering Calculate distance matrix cluster centers using custom distance function Find shortest path connecting cluster centers using custom distance matrix Iteratively fit curve given data using principal curves","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/infer_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer linear trajectory through space — infer_trajectory","text":"","code":"infer_trajectory(   space,   k = 4,   thresh = 0.001,   maxit = 10,   stretch = 0,   smoother = \"smooth_spline\",   approx_points = 100 )"},{"path":"rcannood.github.io/SCORPIUS/reference/infer_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer linear trajectory through space — infer_trajectory","text":"space numeric matrix data frame containing coordinates samples. k number clusters cluster data . thresh convergence threshold shortest distances curve. maxit maximum number iterations. stretch stretch factor endpoints curve, allowing curve grow avoid bunching end. Must numeric value 0 2. smoother choice smoother. default \"smooth_spline\", choices \"lowess\" \"periodic_lowess\". latter allows one fit closed curves. Beware, may want use iter = 0 lowess(). approx_points Approximate curve smoothing reduce computational time. FALSE, approximation curve occurs. Otherwise, approx_points must equal number points curve gets approximated ; preferably 100.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/infer_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer linear trajectory through space — infer_trajectory","text":"list containing several objects: path: trajectory obtained principal curves. time: time point sample along inferred trajectory.","code":""},{"path":[]},{"path":"rcannood.github.io/SCORPIUS/reference/infer_trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infer linear trajectory through space — infer_trajectory","text":"","code":"## Generate an example dataset and visualise it dataset <- generate_dataset(num_genes = 500, num_samples = 1000, num_groups = 4) space <- reduce_dimensionality(dataset$expression, ndim = 2) draw_trajectory_plot(space, progression_group = dataset$sample_info$group_name)   ## Infer a trajectory through this space traj <- infer_trajectory(space)  ## Visualise the trajectory draw_trajectory_plot(space, path=traj$path, progression_group = dataset$sample_info$group_name)"},{"path":"rcannood.github.io/SCORPIUS/reference/reduce_dimensionality.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensionality reduction — reduce_dimensionality","title":"Dimensionality reduction — reduce_dimensionality","text":"reduce_dimensionality performs eigenanalysis given dissimilarity matrix returns coordinates samples represented ndim-dimensional space.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/reduce_dimensionality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensionality reduction — reduce_dimensionality","text":"","code":"reduce_dimensionality(   x,   dist = c(\"spearman\", \"pearson\", \"euclidean\", \"cosine\", \"manhattan\"),   ndim = 3,   num_landmarks = 1000 )"},{"path":"rcannood.github.io/SCORPIUS/reference/reduce_dimensionality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensionality reduction — reduce_dimensionality","text":"x numeric matrix dist distance metric used; can metrics listed dynutils::calculate_distance(). ndim maximum dimension space data represented ; must 1, 2, ..., n-1. num_landmarks number landmarks selected.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/reduce_dimensionality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensionality reduction — reduce_dimensionality","text":"matrix containing coordinates sample, represented ndim-dimensional space.","code":""},{"path":[]},{"path":"rcannood.github.io/SCORPIUS/reference/reduce_dimensionality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensionality reduction — reduce_dimensionality","text":"","code":"## Generate an example dataset dataset <- generate_dataset(num_genes = 500, num_samples = 1000, num_groups = 4)  ## Reduce the dimensionality of this dataset space <- reduce_dimensionality(dataset$expression, ndim = 2)  ## Visualise the dataset draw_trajectory_plot(space, progression_group = dataset$sample_info$group_name)"},{"path":"rcannood.github.io/SCORPIUS/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dynutils apply_minmax_scale, apply_quantile_scale, apply_uniform_scale, scale_minmax, scale_quantile, scale_uniform","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/reverse_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse a trajectory — reverse_trajectory","title":"Reverse a trajectory — reverse_trajectory","text":"Since direction trajectory specified, ordering trajectory may inverted using reverse_trajectory.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/reverse_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse a trajectory — reverse_trajectory","text":"","code":"reverse_trajectory(trajectory)"},{"path":"rcannood.github.io/SCORPIUS/reference/reverse_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse a trajectory — reverse_trajectory","text":"trajectory trajectory returned infer_trajectory.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/reverse_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse a trajectory — reverse_trajectory","text":"trajectory, direction.","code":""},{"path":[]},{"path":"rcannood.github.io/SCORPIUS/reference/reverse_trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse a trajectory — reverse_trajectory","text":"","code":"## Generate an example dataset and infer a trajectory through it dataset <- generate_dataset(num_genes = 500, num_samples = 1000, num_groups = 4) group_name <- dataset$sample_info$group_name space <- reduce_dimensionality(dataset$expression, ndim = 2) traj <- infer_trajectory(space)  ## Visualise the trajectory draw_trajectory_plot(space, group_name, path = traj$path)   ## Reverse the trajectory reverse_traj <- reverse_trajectory(traj) draw_trajectory_plot(space, group_name, path = reverse_traj$path)   plot(traj$time, reverse_traj$time, type = \"l\")"},{"path":"rcannood.github.io/SCORPIUS/reference/ti_scorpius.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer a trajectory using SCORPIUS — ti_scorpius","title":"Infer a trajectory using SCORPIUS — ti_scorpius","text":"Pass object dynwrap::infer_trajectory().","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/ti_scorpius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer a trajectory using SCORPIUS — ti_scorpius","text":"","code":"ti_scorpius(   distance_method = \"spearman\",   ndim = 3L,   k = 4L,   thresh = 0.001,   maxit = 10L,   stretch = 0,   smoother = \"smooth_spline\" )"},{"path":"rcannood.github.io/SCORPIUS/reference/ti_scorpius.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer a trajectory using SCORPIUS — ti_scorpius","text":"distance_method character string indicating correlationcoefficient (covariance) computed. One \"pearson\", \"spearman\" (default), \"cosine\". Domain: spearman, pearson, cosine. Default: spearman. Format: character. ndim number dimensions new space. Domain: U(2, 20). Default: 3. Format: integer. k number clusters cluster data construct initial trajectory. Domain: U(1, 20). Default: 4. Format: integer. thresh principal_curve parameter; convergence threshhold shortest distances curve. Domain: e^U(-11.51, 11.51). Default: 0.001. Format: numeric. maxit principal_curve parameter; maximum number iterations. Domain: U(0, 50). Default: 10. Format: integer. stretch principal_curve parameter; factor curve can extrapolated points projected. Domain: U(0, 5). Default: 0. Format: numeric. smoother principal_curve parameter; choice smoother. Domain: smooth_spline, lowess, periodic_lowess. Default: smooth_spline. Format: character.","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/ti_scorpius_run_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Run scorpius using the dynwrap pipeline — ti_scorpius_run_fun","title":"Run scorpius using the dynwrap pipeline — ti_scorpius_run_fun","text":"Run scorpius using dynwrap pipeline","code":""},{"path":"rcannood.github.io/SCORPIUS/reference/ti_scorpius_run_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run scorpius using the dynwrap pipeline — ti_scorpius_run_fun","text":"","code":"ti_scorpius_run_fun(expression, priors, parameters, seed = NULL, verbose = 0)"},{"path":"rcannood.github.io/SCORPIUS/reference/ti_scorpius_run_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run scorpius using the dynwrap pipeline — ti_scorpius_run_fun","text":"expression Expression matrix priors Priors parameters Parameters seed Random seed verbose Verbosity level","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-109","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.9","title":"SCORPIUS 1.0.9","text":"Resubmission babelwhale removed CRAN. DOCUMENTATION: Add vignette working AnnData objects. DOCUMENTATION: Add vignette working SingleCellExperiment objects. DOCUMENTATION: Create pkgdown site. DOCUMENTATION: Update citEntry bibentry.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-108","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.8","title":"SCORPIUS 1.0.8","text":"CRAN release: 2021-06-09 MINOR CHANGE: Allow adding row annotations draw_trajectory_heatmap().","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-107-2020-05-11","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.7 (2020-05-11)","title":"SCORPIUS 1.0.7 (2020-05-11)","text":"CRAN release: 2020-05-11 Fix ahead dplyr 1.0 release. MINOR CHANGE: substitute .tbl_cube reshape2::melt.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-106-2020-03-16","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.6 (2020-03-16)","title":"SCORPIUS 1.0.6 (2020-03-16)","text":"CRAN release: 2020-03-16","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"minor-change-1-0-6","dir":"Changelog","previous_headings":"","what":"Minor change","title":"SCORPIUS 1.0.6 (2020-03-16)","text":"Resubmission SCORPIUS. SCORPIUS removed CRAN dynwrap removed CRAN. Added vignette using SCORPIUS analyse Seurat data.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-105-08-12-2019","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.5 (08-12-2019)","title":"SCORPIUS 1.0.5 (08-12-2019)","text":"CRAN release: 2019-12-08","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"major-change-1-0-5","dir":"Changelog","previous_headings":"","what":"Major change","title":"SCORPIUS 1.0.5 (08-12-2019)","text":"Added ti_scorpius() wrapper SCORPIUS.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"minor-change-1-0-5","dir":"Changelog","previous_headings":"","what":"Minor change","title":"SCORPIUS 1.0.5 (08-12-2019)","text":"Use RANN::nn2() instead nearest neighbour functions. Remove deprecated functions. Use lmds instead dyndimred.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-104-07-08-2019","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.4 (07-08-2019)","title":"SCORPIUS 1.0.4 (07-08-2019)","text":"CRAN release: 2019-08-05","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"minor-changes-1-0-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"SCORPIUS 1.0.4 (07-08-2019)","text":"Added extra customisation parameters draw_trajectory_plot() draw_trajectory_heatmap().","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"optimisation-1-0-4","dir":"Changelog","previous_headings":"","what":"Optimisation","title":"SCORPIUS 1.0.4 (07-08-2019)","text":"Fixed internal function check_numeric_matrix() run ages applied large sparse matrix. Minor improvement infer_initial_trajectory() calculating distance points along candidate segments.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-103-27-05-2019","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.3 (27-05-2019)","title":"SCORPIUS 1.0.3 (27-05-2019)","text":"CRAN release: 2019-05-27","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"optimisation-1-0-3","dir":"Changelog","previous_headings":"","what":"Optimisation","title":"SCORPIUS 1.0.3 (27-05-2019)","text":"infer_trajectory(): Use princurve’s approx_points parameter, greatly speeds trajectory inference large number samples.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"major-changes-1-0-3","dir":"Changelog","previous_headings":"","what":"Major changes","title":"SCORPIUS 1.0.3 (27-05-2019)","text":"Use dynutils’ calculate_distance() instead correlation_distance() euclidean_distance().","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"documentation-1-0-3","dir":"Changelog","previous_headings":"","what":"Documentation","title":"SCORPIUS 1.0.3 (27-05-2019)","text":"Vignettes updated. Added cran-comments.md. Added recent news (inst/NEWS.md). Added citation information (inst/CITATION). Added support sparsity extract_modules() dimensionality_reduction().","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"minor-changes-1-0-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"SCORPIUS 1.0.3 (27-05-2019)","text":"Use scaling functions dynutils (scale_minmax(), scale_quantile(), scale_uniform()). Expanded unit tests. Renormalise original ginhoux data using dynnormaliser rerun vignettes. Moved cmdscale_withlandmarks() dyndimred.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"bug-fixes-1-0-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"SCORPIUS 1.0.3 (27-05-2019)","text":"extract_modules(): smooth.spline() now requires least 4 unique values.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"deprecation-1-0-3","dir":"Changelog","previous_headings":"","what":"Deprecation","title":"SCORPIUS 1.0.3 (27-05-2019)","text":"Deprecated unused functions evaluate_trajectory() evaluate_dim_red(). Use dyneval::evaluate_ti_method() instead.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-102-2018-06-29","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.2 (2018-06-29)","title":"SCORPIUS 1.0.2 (2018-06-29)","text":"CRAN release: 2018-06-29 MINOR CHANGE: Depend dynutils distance functions. MAJOR CHANGE reduce_dimensionality(): Merge reduce_dimensionality_landmarked reduce_dimensionality functions. REMOVAL: Removed outlier_filter(); much better scRNA-seq preprocessing pipelines existance now.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-101-2018-06-21","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.1 (2018-06-21)","title":"SCORPIUS 1.0.1 (2018-06-21)","text":"MINOR CHANGE: Update princurve 2.0.2. REMOVAL: Removed deprecated functions infer.trajectory(), reduce.dimensionality, . DOCUMENTATION: Various fixes. TESTING: Calculate code coverage travis.","code":""},{"path":"rcannood.github.io/SCORPIUS/news/index.html","id":"scorpius-100-2017-09-15","dir":"Changelog","previous_headings":"","what":"SCORPIUS 1.0.0 (2017-09-15)","title":"SCORPIUS 1.0.0 (2017-09-15)","text":"Initial release CRAN.","code":""}]
